{"version":3,"file":"static/js/983.0aa58aeb.chunk.js","mappings":"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","sources":["components/ListMovies/ListMovies.styled.js","components/ListMovies/ListMovies.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-left: 50px;\n  margin-top: 24px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  max-width: 160px;\n`;\n\nexport const Title = styled.p`\n  text-decoration: none;\n  font-size: 16px;\n  margin-top: 12px;\n  color: #111;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const Img = styled.img`\n  height: 240px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { Img, Item, List, StyledLink, Title } from './ListMovies.styled';\n\nexport const ListMovies = ({ movies, location }) => {\n  return (\n    <>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <Img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt=\"\"\n                width={160}\n              />\n              <Title>{movie.title}</Title>\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n","import { fetchTrendMovies } from 'api';\nimport { useEffect, useState } from 'react';\nimport { ListMovies } from 'components/ListMovies/ListMovies';\nimport { useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { Errors } from 'components/Errors/Errors';\n\nexport default function HomePage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const FetchMovies = async () => {\n      try {\n        const response = await fetchTrendMovies();\n        setMovies(response.results ?? []);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    FetchMovies();\n  }, []);\n\n  return (\n    <>\n      {movies.length > 0 && (\n        <div>\n          <h1 style={{ marginLeft: 60 }}>Trending Today</h1>\n          <ListMovies movies={movies} location={location} />\n        </div>\n      )}\n      {isError && <Errors>Errors! Please try again!</Errors>}\n      {isLoading && <Loader />}\n    </>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Title","_templateObject3","Img","_templateObject4","StyledLink","Link","_templateObject5","ListMovies","_ref","movies","location","_jsx","_Fragment","children","map","movie","_jsxs","to","concat","id","state","from","src","poster_path","alt","width","title","HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isError","setIsError","_useState5","_useState6","setMovies","useLocation","useEffect","FetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_response$results","response","_context","prev","next","fetchTrendMovies","sent","results","t0","finish","stop","apply","arguments","length","style","marginLeft","Errors","Loader"],"sourceRoot":""}